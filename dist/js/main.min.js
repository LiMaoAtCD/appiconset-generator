"use strict";const{app:app,BrowserWindow:BrowserWindow,TouchBar:TouchBar,ipcMain:ipcMain}=require("electron"),{TouchBarButton:TouchBarButton,TouchBarSpacer:TouchBarSpacer,TouchBarSegmentedControl:TouchBarSegmentedControl}=TouchBar,url=require("url"),path=require("path"),fs=require("fs-extra"),sharp=require("electron-sharp"),dialog=require("electron").dialog,Store=require("electron-store"),util=require("util"),loadJSON=require("load-json-file");let win,modal,tempString,touchBar1,touchBar2,prefsTouchBar,group,groupPrefs,appIdentifier="com.midwinter-dg."+app.getName().toLowerCase().replace(" ","-"),tempDir=app.getPath("temp")+`${appIdentifier}/`,buttons=[],generate=[],prefsButtons=[],store=new Store({defaults:{windowBounds:{x:0,y:0},iconType:0,interpolation:"lanczos3",savePath:app.getPath("desktop")}});function createWindow(){let{x:e,y:t,width:o,height:n}=store.get("windowBounds");function r(){store.set("windowBounds",win.getBounds())}(win=new BrowserWindow({show:!1,titleBarStyle:"hidden",x:e,y:t,width:820,height:620,transparent:!0,resizable:!1,maximizable:!1,fullscreen:!1,webPreferences:{preload:path.join(__dirname,"./preload.min.js")},icon:path.join(__dirname,"../assets/icon/Icon.icns")})).setSheetOffset(23),win.loadURL(url.format({pathname:path.join(__dirname,"../html/app.html"),protocol:"file:",slashes:!0})),win.once("ready-to-show",()=>{win.show(),empty()}),win.on("resize",r),win.on("move",r),win.on("closed",()=>{app.quit(),empty()}),require("./menu-app.min")}function empty(){fs.emptyDir(tempDir,e=>{if(e)return console.error(e)})}function saveIconsetToPath(e){let t=store.get("savePath");dialog.showSaveDialog(win,{defaultPath:t+"/AppIcon.appiconset",buttonLabel:"Save Appiconset"},function(t){t&&fs.copy(e,t,e=>{if(e)return console.error(e);console.info("success!")})})}app.on("ready",createWindow),app.on("open",e=>{dialog.showOpenDialog(win,{defaultPath:app.getPath("home"),buttonLabel:"Choose Image",filters:[{name:"Images",extensions:["png","jpg","gif","bmp"]}],properties:["openFile"],message:"The file must be one of the following types: .png, .jpg, .gif, .bmp"},function(e){e&&win.webContents.send("load",e)})}),ipcMain.on("touchbar",(e,t)=>{let o,n=[],r=0,a=0;for(let e of t)n.push({label:e.type}),e.state&&(a=r),r++;o=new TouchBarSpacer({size:"small"}),group=new TouchBarSegmentedControl({segmentStyle:"separated",mode:"single",segments:n,selectedIndex:a,change:e=>{win.webContents.send("touchbar-select",e)}}),buttons.push(group),generate.push(group),buttons.push(o),generate.push(o),generate.push(new TouchBarButton({label:"Generate Appiconset",backgroundColor:"#3B88FD",click:()=>{win.webContents.send("menu-generate","generate")}})),touchBar1=new TouchBar(buttons),win.setTouchBar(touchBar1)}),ipcMain.on("touchbar-index",(e,t)=>{group.selectedIndex=t}),ipcMain.on("size",(e,t)=>{dialog.showMessageBox(win,{type:"info",message:"Image too small",detail:"For best results the image must be at least\n1024 x 1024px",buttons:["OK"]})}),ipcMain.on("valid",(e,t)=>{let o=t.replace(/^data:image\/\w+;base64,/,""),n=Buffer.from(o,"base64");tempString=Date.now(),fs.ensureDir(`${tempDir}/${tempString}/`,e=>{if(e)return console.error(e);fs.writeFile(`${tempDir}/${tempString}.png`,n,function(e){if(e)return console.error(e);win.webContents.send("preview",`${tempDir}/${tempString}.png`),touchBar2=new TouchBar(generate),win.setTouchBar(touchBar2)})})}),ipcMain.on("invalid",(e,t)=>{dialog.showMessageBox(win,{type:"error",message:"Invalid file format",detail:`${t} is not a valid image file.\nThe file must be one of the following types: .png, .jpg, .gif, .bmp`,buttons:["OK"]})}),ipcMain.on("generate",(e,t)=>{fs.emptyDirSync(`${tempDir}/${tempString}/`);let o=store.get("interpolation"),n=sharp(`${tempDir}/${tempString}.png`),r={images:[],info:{version:1,author:appIdentifier}};loadJSON(path.join(__dirname,"../json/iconsets.json")).then(e=>{let a=[];for(let i of e[t]){let e=i.size*i.scale,t=`icon_${i.size}x${i.size}@${i.scale}x.png`;!1===a.includes(t)&&(a.push(t),n.resize(e,e,{kernel:sharp.kernel[o],fit:"contain",position:"left top"}).toFile(`${tempDir}/${tempString}/${t}`).then(()=>{console.info(`generated ${i.size} - @${i.scale}x`)}),r.images.push({size:`${i.size}x${i.size}`,idiom:i.idiom,filename:t,scale:`${i.scale}x`}))}fs.writeJson(`${tempDir}/${tempString}/Contents.json`,r,{spaces:"\t"},function(e){if(e)return console.error(e);saveIconsetToPath(`${tempDir}/${tempString}`)})})}),ipcMain.on("deleted",(e,t)=>{touchBar1=new TouchBar(buttons),win.setTouchBar(touchBar1)}),app.on("open-prefs",e=>{let t;switch(store.get("interpolation")){case"cubic":t=1;break;case"mitchell":t=2;break;case"lanczos2":t=3;break;case"lanczos3":t=4;break;default:t=0}groupPrefs=new TouchBarSegmentedControl({segmentStyle:"separated",mode:"single",segments:[{label:"Nearest Neighbour"},{label:"Cubic"},{label:"Mitchell"},{label:"Lanczos a=2"},{label:"Lanczos a=3"}],selectedIndex:t,change:e=>{modal.webContents.send("prefs-select",e)}}),prefsButtons.push(groupPrefs),prefsButtons.push(new TouchBarButton({label:"Close",backgroundColor:"#3B88FD",click:()=>{modal.close()}})),prefsTouchBar=new TouchBar(prefsButtons),(modal=new BrowserWindow({parent:win,modal:!0,width:360,minWidth:360,maxWidth:360,height:210,minHeight:210,resizable:!1,show:!1,transparent:!0,webPreferences:{preload:path.join(__dirname,"./preload.min.js")}})).loadURL(url.format({pathname:path.join(__dirname,"/../html/prefs.html"),protocol:"file:",slashes:!0})),modal.setTouchBar(prefsTouchBar),modal.once("ready-to-show",()=>{modal.show()})}),ipcMain.on("prefs-change",(e,t)=>{groupPrefs.selectedIndex=parseInt(t)});
//# sourceMappingURL=maps/main.min.js.map
