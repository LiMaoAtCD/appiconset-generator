{"version":3,"sources":["main.js"],"names":["i18n","require","i18nextBackend","LanguageDetector","path","i18nextOptions","fallbackLng","debug","ns","defaultNS","backend","loadPath","join","__dirname","addPath","jsonIndent","saveMissing","initImmediate","use","init","app","BrowserWindow","TouchBar","ipcMain","TouchBarButton","TouchBarSpacer","TouchBarSegmentedControl","url","fs","sharp","dialog","Store","util","loadJSON","win","modal","tempString","touchBar1","touchBar2","prefsTouchBar","group","groupPrefs","appIdentifier","getName","toLowerCase","replace","tempDir","getPath","buttons","generate","prefsButtons","store","defaults","windowBounds","x","y","iconType","interpolation","savePath","createWindow","width","height","get","saveWindowBounds","set","getBounds","show","titleBarStyle","transparent","resizable","maximizable","fullscreen","webPreferences","preload","icon","setSheetOffset","loadURL","format","pathname","protocol","slashes","once","empty","on","quit","emptyDir","err","console","error","saveIconsetToPath","message","showSaveDialog","defaultPath","buttonLabel","filename","copy","info","showOpenDialog","t","filters","name","extensions","properties","webContents","send","event","spacer","segments","count","selected","item","push","label","type","state","size","segmentStyle","mode","selectedIndex","change","backgroundColor","click","setTouchBar","showMessageBox","detail","data","buffer","Buffer","from","Date","now","ensureDir","writeFile","emptyDirSync","image","Contents","images","version","author","then","json","iconlist","actualPixels","scale","includes","resize","kernel","fit","position","toFile","idiom","writeJson","spaces","ind","close","parent","minWidth","maxWidth","minHeight","parseInt"],"mappings":"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","file":"../main.min.js","sourcesContent":["'use strict'\n\nconst i18n = require( 'i18next' )\nconst i18nextBackend = require( 'i18next-sync-fs-backend' )\nconst LanguageDetector = require( 'i18next-electron-language-detector' )\nconst path = require( 'path' )\n\nconst i18nextOptions = {\n\n\tfallbackLng: 'en',\n\tdebug: false,\n\tns: [\n\t\t'app',\n\t\t'menu',\n\t\t'prefs',\n\t\t'about'\n\t\t],\n\tdefaultNS: 'app',\n\tbackend:{\n\t\tloadPath: path.join(__dirname, '../i18n/{{lng}}/{{ns}}.json'),\n\t\taddPath: path.join(__dirname, '../i18n/{{lng}}/{{ns}}.missing.json'),\n\tjsonIndent: 2,\n\t},\n\tsaveMissing: true,\n\tinitImmediate: true\n}\n\ni18n.use(LanguageDetector).use(i18nextBackend)\ni18n.init(i18nextOptions)\n\n\n\nconst { app, BrowserWindow, TouchBar, ipcMain } = require( 'electron' )\nconst { TouchBarButton, TouchBarSpacer, TouchBarSegmentedControl } = TouchBar\n\nconst url \t\t= require( 'url' ) \nconst fs \t\t= require( 'fs-extra' )\nconst sharp \t= require( 'electron-sharp' )\nconst dialog \t= require( 'electron' ).dialog\nconst Store \t= require( 'electron-store' )\nconst util \t\t= require( 'util' )\nconst loadJSON \t= require( 'load-json-file' )\n\n\n\nlet win,\n\tmodal,\n\ttempString,\n\tappIdentifier = 'com.midwinter-dg.' + app.getName().toLowerCase().replace(' ', '-'),\n\ttempDir = app.getPath( 'temp' ) + `${appIdentifier}/`,\n\ttouchBar1,\n\ttouchBar2,\n\tprefsTouchBar,\n\tgroup,\n\tgroupPrefs,\n\tbuttons = [],\n\tgenerate = [],\n\tprefsButtons = []\n\n\n\nlet store = new Store({\n\tdefaults: {\n\t\t\n\t\twindowBounds: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t},\n\t\t\n\t\ticonType: \t\t0,\n\t\tinterpolation: \t'lanczos3',\n\t\tsavePath: \t\tapp.getPath( 'desktop' )\n\t}\n})\n\n\n\nfunction createWindow() {\n\t\n\tlet { x, y, width, height } = store.get('windowBounds')\n\t\n\twin = new BrowserWindow({\n\t\tshow: false,\n\t\ttitleBarStyle: 'hidden',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: 820,\n\t\theight: 620,\n\t\ttransparent: true,\n\t\tresizable: false,\n\t\tmaximizable: false,\n\t\tfullscreen: false,\n\t\twebPreferences: {\n\t\t\t//devTools: false,\n\t\t\tpreload: path.join(__dirname, './preload.min.js')\n\t\t},\n\t\ticon: path.join(__dirname, '../assets/icon/Icon.icns')\n\t})\n\t\n\twin.setSheetOffset( 23 )\n\t\n\tfunction saveWindowBounds() {\n\t\t\n\t\tstore.set( 'windowBounds', win.getBounds() )\n\t}\n\t\n\twin.loadURL(url.format ({ \n\t\t\n\t\tpathname: path.join(__dirname, '../html/app.html'), \n\t\tprotocol: 'file:', \n\t\tslashes: true \n\t}))\n\t\n\twin.once('ready-to-show', () => {\n\t\t\n\t\twin.show()\n\t\tempty()\n\t})\n\t\n\twin.on( 'resize', saveWindowBounds )\n\twin.on( 'move', saveWindowBounds )\n\t\n\twin.on('closed', () => {\n\t\t\n\t\tapp.quit()\n\t\tempty()\n\t})\n\t\n\trequire( './menu-app.min' )\n}\n\n\napp.on( 'ready', createWindow )\n\n\n\nfunction empty() {\n\t\n\tfs.emptyDir( tempDir, err => {\n\t\t\n\t\tif( err ) {\n\t\t\t\n\t\t\treturn console.error( err )\n\t\t}\n\t})\n}\n\n\n\napp.on( 'open', ( message ) => {\n\t\n\tdialog.showOpenDialog(win, {\n\t\t\t\n\t\t\tdefaultPath: app.getPath('home'),\n\t\t\tbuttonLabel: i18n.t('app:dialog.open.button', 'Choose Image'),\n\t\t\tfilters: [\n\t\t\t\t{ name: 'Images', extensions: ['png', 'jpg', 'gif', 'bmp'] },\n\t\t\t],\n\t\t\tproperties: [\n\t\t\t\t'openFile'\n\t\t\t],\n\t\t\tmessage: i18n.t('app:dialog.open.message', 'The file must be one of the following types: .png, .jpg, .gif, .bmp')\n\t\t},\t\t\n\t\t\n\t\tloadImage\n\t)\n\t\n\t\n\tfunction loadImage( filename ) {\n\t\t\n\t\tif( filename ) {\n\t\t\t\n\t\t\twin.webContents.send( 'load', filename )\n\t\t}\n\t}\n})\n\n\n\nipcMain.on( 'touchbar', ( event, message ) => {\n\t\n\tlet segments = [],\n\t\tspacer,\n\t\tcount = 0,\n\t\tselected = 0\n\t\n\tfor ( let item of message ) {\n\t\t\n\t\tsegments.push({ label: item.type })\n\t\t\n\t\tif( item.state ) selected = count\n\t\t\n\t\tcount++\n\t}\n\t\n\tspacer \t= new TouchBarSpacer({ size: 'small' })\n\tgroup \t= new TouchBarSegmentedControl({\n\t\t\n\t\tsegmentStyle: 'separated',\n\t\tmode: 'single',\n\t\tsegments: segments,\n\t\tselectedIndex: selected,\n\t\tchange: ( selectedIndex ) => {\n\t\t\t\n\t\t\twin.webContents.send( 'touchbar-select', selectedIndex )\n\t\t}\n\t})\n\t\n\tbuttons.push( group )\n\tgenerate.push( group )\n\tbuttons.push( spacer )\n\tgenerate.push( spacer )\n\t\n\tgenerate.push(\n\t\n\t\tnew TouchBarButton({\n\t\t\t\n\t\t\tlabel: i18n.t('app:button.generate', 'Generate Appiconset'),\n\t\t\tbackgroundColor: '#3B88FD',\n\t\t\tclick: () => {\n\t\t\t\t\n\t\t\t\twin.webContents.send( 'menu-generate', 'generate' )\n\t\t\t}\n\t\t})\n\t)\n\t\n\ttouchBar1 = new TouchBar( buttons )\n\twin.setTouchBar( touchBar1 )\n})\n\n\nipcMain.on( 'touchbar-index', ( event, message ) => {\n\t\n\tgroup.selectedIndex = message\n})\n\n\n\nipcMain.on( 'size', ( event, message ) => {\n\t\n\tdialog.showMessageBox( win, {\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\tmessage: i18n.t('app:dialog.size.message', 'Image too small'),\n\t\t\t\t\t\t\tdetail: i18n.t('app:dialog.size.detail', 'For best results the image must be at least\\n1024 x 1024px'),\n\t\t\t\t\t\t\tbuttons: ['OK']\n\t\t\t\t\t\t})\n})\n\n\n\nipcMain.on( 'valid', ( event, message ) => {\n\t\n\tlet data \t= message.replace(/^data:image\\/\\w+;base64,/, ''),\n\t\tbuffer \t= Buffer.from(data, 'base64')\n\t\t\n\ttempString = Date.now()\n\t\n\tfs.ensureDir( `${tempDir}/${tempString}/`, err => {\n\t\t\n\t\tif( err ) {\n\t\t\t\n\t\t\treturn console.error( err )\n\t\t}\n\t\t\n\t\tfs.writeFile( `${tempDir}/${tempString}.png`, buffer, function( err ) {\n\t\t\t\n\t\t\tif( err ) {\n\t\t\t\t\n\t\t\t\treturn console.error( err )\n\t\t\t}\n\t\t\t\n\t\t\twin.webContents.send( 'preview', `${tempDir}/${tempString}.png` )\n\t\t\t\n\t\t\ttouchBar2 = new TouchBar( generate )\n\t\t\twin.setTouchBar( touchBar2 )\n\t\t})\t\n\t})\n})\n\n\n\nipcMain.on( 'invalid', ( event, message ) => {\n\t\n\tdialog.showMessageBox( win, {\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tmessage: i18n.t('app:dialog.error.message', 'Invalid file format'),\n\t\t\t\t\t\t\tdetail: i18n.t('app:dialog.error.detail', '{{message}} is not a valid image file.\\nThe file must be one of the following types: .png, .jpg, .gif, .bmp'),\n\t\t\t\t\t\t\tbuttons: [i18n.t('app:dialog.error.ok', 'OK')]\n\t\t\t\t\t\t})\n})\n\n\n\nipcMain.on( 'generate', ( event, message ) => {\n\t\n\tfs.emptyDirSync( `${tempDir}/${tempString}/` )\n\t\n\tlet interpolation = store.get( 'interpolation' ),\n\timage = sharp( `${tempDir}/${tempString}.png` ),\n\tContents = {\n\t\t\t\t\t\"images\" : [],\n\t\t\t\t\t\"info\" : {\n\t\t\t\t\t\t\"version\" : 1,\n\t\t\t\t\t\t\"author\" : appIdentifier\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\tloadJSON( path.join(__dirname, '../json/iconsets.json') ).then(json => {\n\t\t\n\t\tlet iconlist = []\n\t\t\n\t\tfor( let item of json[message] ) {\n\t\t\t\n\t\t\tlet actualPixels = item.size * item.scale,\n\t\t\t\tfilename = `icon_${item.size}x${item.size}@${item.scale}x.png`\n\t\t\t\n\t\t\tif ( iconlist.includes( filename ) === false ) {\n\t\t\t\t\n\t\t\t\ticonlist.push( filename )\n\t\t\t\t\n\t\t\t\timage\n\t\t\t\t\t.resize(actualPixels, actualPixels, {\n\t\t\t\t\tkernel: sharp['kernel'][interpolation],\n\t\t\t\t\tfit: 'contain',\n\t\t\t\t\tposition: 'left top'\n\t\t\t\t})\n\t\t\t\t.toFile( `${tempDir}/${tempString}/${filename}` )\n\t\t\t\t.then(() => {\n\t\t\t\t\t\n\t\t\t\t\tconsole.info( `generated ${item.size} - @${item.scale}x` )\n\t\t\t\t})\n\t\n\t\n\t\t\t\tContents.images.push({\n\t\t\t\t\t\t\"size\" : `${item.size}x${item.size}`,\n\t\t\t\t\t\t\"idiom\" : item.idiom,\n\t\t\t\t\t\t\"filename\" : filename,\n\t\t\t\t\t\t\"scale\" : `${item.scale}x`\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t\n\t\tfs.writeJson( `${tempDir}/${tempString}/Contents.json`, Contents, {\n\t\t\t\tspaces: '\\t'\n\t\t\t}, \n\t\t\t\n\t\t\tfunction( err ) {\n\t\t\t\n\t\t\tif ( err ) return console.error( err )\n\t\t\t\n\t\t\tsaveIconsetToPath( `${tempDir}/${tempString}` )\n\t\t})\n\t})\n})\n\n\n\nipcMain.on( 'deleted', ( event, message ) => {\n\t\n\ttouchBar1 = new TouchBar( buttons )\n\twin.setTouchBar( touchBar1 )\n})\n\n\n\nfunction saveIconsetToPath( message ) {\n\t\n\tlet savePath =  store.get( 'savePath' )\n\t\n\tdialog.showSaveDialog( win, {\n\t\t\t\n\t\t\tdefaultPath: savePath + '/AppIcon.appiconset',\n\t\t\tbuttonLabel: 'Save Appiconset'\n\t\t},\t\t\n\t\t\n\t\tfunction( filename ) {\n\t\t\t\n\t\t\tif( filename ) {\n\t\t\t\n\t\t\t\tfs.copy( message, filename, err => {\n\t\t\t\t\t\n\t\t\t\t\tif ( err ) return console.error( err )\n\t\t\t\t\t\n\t\t\t\t\tconsole.info( 'success!' )\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t)\n}\n\n\n\napp.on( 'open-prefs', (message) => {\n\t\n\tlet ind\n\t\n\tswitch( store.get( 'interpolation' ) ) {\n\t\t\n\t\tcase 'cubic': \t\tind = 1\n\t\tbreak;\n\t\t\n\t\tcase 'mitchell': \tind = 2\n\t\tbreak;\n\t\t\n\t\tcase 'lanczos2': \tind = 3\n\t\tbreak;\n\t\t\n\t\tcase 'lanczos3': \tind = 4\n\t\tbreak;\n\t\t\n\t\tdefault: \t\t\tind = 0\n\t}\n\t\n\tgroupPrefs = new TouchBarSegmentedControl({\n\t\n\t\tsegmentStyle: 'separated',\n\t\tmode: 'single',\n\t\tsegments: [\n\t\t\t{ label: i18n.t('prefs:touchbar.interpolation.nearest', 'Nearest Neighbour') },\n\t\t\t{ label: i18n.t('prefs:touchbar.interpolation.cubic', 'Cubic') },\n\t\t\t{ label: i18n.t('prefs:touchbar.interpolation.mitchell', 'Mitchell') },\n\t\t\t{ label: i18n.t('prefs:touchbar.interpolation.lanczos2', 'Lanczos a=2') },\n\t\t\t{ label: i18n.t('prefs:touchbar.interpolation.lanczos3', 'Lanczos a=3') }\n\t\t],\n\t\tselectedIndex: ind,\n\t\tchange: ( selectedIndex ) => {\n\t\t\t\n\t\t\tmodal.webContents.send( 'prefs-select', selectedIndex )\n\t\t}\n\t})\n\t\n\tprefsButtons.push( groupPrefs )\n\t\n\tprefsButtons.push(\n\t\t\n\t\tnew TouchBarButton({\n\t\t\t\n\t\t\tlabel: i18n.t('prefs:button.close', 'Close'),\n\t\t\tbackgroundColor: '#3B88FD',\n\t\t\tclick: () => {\n\t\t\t\t\n\t\t\t\tmodal.close()\n\t\t\t}\n\t\t})\n\t)\n\t\n\tprefsTouchBar = new TouchBar( prefsButtons )\n\t\n\tmodal = new BrowserWindow({\n\t\n\t\tparent: win,\n\t\tmodal: true,\n\t\twidth: 360,\n\t\tminWidth: 360,\n\t\tmaxWidth: 360,\n\t\theight: 210,\n\t\tminHeight: 210,\n\t\tresizable: false,\n\t\tshow: false,\n\t\ttransparent: true,\n\t\twebPreferences: {\n\t\t\t//devTools: false,\n\t\t\tpreload: path.join(__dirname, './preload.min.js')\n\t\t}\n\t})\n\t\n\tmodal.loadURL(url.format ({ \n\t\t\n\t\tpathname: path.join(__dirname, '/../html/prefs.html'), \n\t\tprotocol: 'file:', \n\t\tslashes: true \n\t}))\n\t\n\tmodal.setTouchBar( prefsTouchBar )\n\t\n\tmodal.once('ready-to-show', () => {\n\t\t\n\t\tmodal.show()\n\t})\n})\n\n\n\nipcMain.on( 'prefs-change', ( event, message ) => {\n\t\n\tgroupPrefs.selectedIndex = parseInt(message)\n})\n"]}