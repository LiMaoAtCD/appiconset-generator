"use strict";window.$=window.jQuery=require("jquery");const path=require("path"),{app:app}=require("electron").remote,{ipcRenderer:ipcRenderer}=require("electron"),{remote:remote}=require("electron"),Store=require("electron-store"),store=new Store,loadJSON=require("load-json-file"),mainCanvas=document.getElementById("icon"),mainContext=mainCanvas.getContext("2d"),previewCanvas=document.getElementById("preview"),previewContext=previewCanvas.getContext("2d"),dropzone=$("#dropzone");let modal;function fitImageOn(e,t,n){let a,r,i,o,d=n.width/n.height,p=e.width/e.height;n.width<1024&&n.height<1024?(r=n.width,a=n.height,i=(e.width-r)/2,o=(e.height-a)/2):d<p?(a=e.height,r=n.width*(a/n.height),i=(e.width-r)/2,o=0):d>p?(r=e.width,a=n.height*(r/n.width),i=0,o=(e.height-a)/2):(a=e.height,r=e.width,i=0,o=0),t.drawImage(n,i,o,r,a)}function clearCanvas(){mainContext.clearRect(0,0,1024,1024),previewContext.clearRect(0,0,256,256),$("#size").removeClass().empty(),$("#preview").removeClass("active")}function loadImage(e){let t=new Image,n=$("#size");t.src=e,t.onload=function(){fitImageOn(mainCanvas,mainContext,t),n.html(`original size: ${t.width} Ã— ${t.height}px`),t.width+t.height<2048&&(n.addClass("alert"),ipcRenderer.send("size","size")),ipcRenderer.send("valid",$("#icon")[0].toDataURL())}}function setType(e){$('input[name="type"][value="'+e+'"]').prop("checked",!0).focus(),$(".form table").hide(),$(`table.icon-${e}`).show("fast")}dropzone.on("dragover",function(){return dropzone.addClass("hover"),!1}),dropzone.on("dragleave",function(){return dropzone.removeClass("hover"),!1}),dropzone.on("drop",function(e){e.stopPropagation(),e.preventDefault(),dropzone.removeClass("hover");const t=e.originalEvent.dataTransfer.files[0].type;return["image/png","image/jpg","image/jpeg","image/gif","image/bmp"].includes(t)?(clearCanvas(),loadImage(e.originalEvent.dataTransfer.files[0].path)):ipcRenderer.send("invalid",e.originalEvent.dataTransfer.files[0].name),!1}),ipcRenderer.on("touchButton",(e,t)=>{$('input[name="type"]:checked').val()!==t&&(setType(t),store.set("iconType",t))}),ipcRenderer.on("touchbar-select",(e,t)=>{setType(t),store.set("iconType",t)}),ipcRenderer.on("delete",(e,t)=>{clearCanvas(),$("#generate").prop("disabled",!0),ipcRenderer.send("deleted","deleted")}),ipcRenderer.on("load",(e,t)=>{$("#generate").prop("disabled",!1),loadImage(t)}),ipcRenderer.on("preview",(e,t)=>{let n=new Image;n.src=t,n.onload=function(){fitImageOn(previewCanvas,previewContext,n),$("#preview").addClass("active"),$("#generate").prop("disabled",!1)}}),ipcRenderer.on("menu-generate",(e,t)=>{$("#generate").prop("disabled")||ipcRenderer.send("generate",$('input[name="type"]:checked').data("name"))}),$("#generate").click(function(){ipcRenderer.send("generate",$('input[name="type"]:checked').data("name"))}),$(document).ready(function(){let e=store.get("iconType");loadJSON(path.join(__dirname,"../json/iconsets.json")).then(t=>{let n=[],a=0;for(let r in t){let i=[],o=a==e;n.push({type:r,state:o}),$(".form").append(`<label><input type="radio" name="type" value="${a}" data-name="${r}" /> ${r}<table class="icon-${a}"></table></label>`);for(let e of t[r]){let t=`<tr><td>${e.size}x${e.size}px</td><td>@${e.scale}x</td></tr>`;!1===i.includes(t)&&(i.push(t),$(`table.icon-${a}`).append(t))}a++}setType(e),ipcRenderer.send("touchbar",n)}),$("body").on("click",'input[name="type"]',function(){$(".form table").hide(),$(`.icon-${$(this).val()}`).show("fast"),ipcRenderer.send("touchbar-index",Number($(this).val())),store.set("iconType",Number($(this).val()))})});
//# sourceMappingURL=maps/app.min.js.map
